{"meta":{"title":"WebMemo","subtitle":"Webについて調べたことをメモ","description":"hexo git github node npm　とは","author":"satoshi","url":"https://satoshi2222.github.io/myblog.github.io.git"},"pages":[{"title":"このサイトについて","date":"2018-09-17T21:39:51.000Z","updated":"2018-09-17T23:43:54.393Z","comments":true,"path":"about/index.html","permalink":"https://satoshi2222.github.io/myblog.github.io.git/about/index.html","excerpt":"","text":"WebMemoについてこのサイトはWebに関する調べたことのメモをブログにしたものです。技術的なことは初心者なので、難しいことは調べてメモ代わりに記事にしていこうと思います。 環境OSはwindows10プラウザはChrome"}],"posts":[{"title":"GitHubへSSHを使って通信","slug":"git3","date":"2018-11-20T20:16:29.000Z","updated":"2018-11-21T10:05:59.508Z","comments":true,"path":"git3/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/git3/","excerpt":"SSHとはSecure Shellの略でリモートシェルに特化していて、リモートサーバに安全にログインしたり、ファイルをセキュアに送受信することができるSSHは暗号化通信を行う際の認証にパスワード認証を使うことができるが、ユーザー名とパスワードが分かれば誰でもログインできてしまうので、より安全な公開鍵認証という認証方法を使うSSHはAndroidやiOSにも実装されているプロトコルのため、ネットワークにSSHの利用環境が整備されていれば、スマートフォンやタブレットから容易にリモート接続が可能となる","text":"SSHとはSecure Shellの略でリモートシェルに特化していて、リモートサーバに安全にログインしたり、ファイルをセキュアに送受信することができるSSHは暗号化通信を行う際の認証にパスワード認証を使うことができるが、ユーザー名とパスワードが分かれば誰でもログインできてしまうので、より安全な公開鍵認証という認証方法を使うSSHはAndroidやiOSにも実装されているプロトコルのため、ネットワークにSSHの利用環境が整備されていれば、スマートフォンやタブレットから容易にリモート接続が可能となる 参考リンクSSHとは 公開鍵認証公開鍵と秘密鍵という２つの情報を使う認証方法公開鍵を、ログイン先のサーバーに登録し、それに対応した秘密鍵を持っているクライアントだけが接続でき相手は公開鍵を使い情報を暗号化して、自分は秘密鍵を使って情報を複合する 公開鍵と秘密鍵の作成コンソールに次のコマンドを入力1ssh-keygen するとsshディレクトリが作成されて、中に公開鍵(id_rsa.pub)と秘密鍵(id _rsa)が作成されて、ファイル名はそのままでEnterキーを押す","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/Git/"},{"name":"GitHub","slug":"GitHub","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/GitHub/"}]},{"title":"同期I/O 非同期I/O","slug":"node3","date":"2018-11-19T20:08:31.000Z","updated":"2018-11-20T20:11:11.123Z","comments":true,"path":"node3/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/node3/","excerpt":"同期I/OとはI/OとはIはInputでOはOutputの英語の頭文字を取ったもので、入出力処理のことで、情報をInput(入力)して、処理結果をOutput(出力)するという流れ多くのプログラミング言語ではI/O処理の間、プログラムを停止してI/O処理を待ち、このことを同期I/Oといい、この処理の間、プログラムが停止することをブロッキングという簡単に言うと今行っている処理が終わっていないなら、次の処理に手を付けないということ 非同期I/Oとは入出力の開始処理をしてもその終了を待たずに、待ち時間中に別の処理を実行することNode.jsは、マルチプロセスやマルチスレッドではなく、シングルスレッドでブロッキングしないで、効率化を図っている非同期I/Oは処理が１つ終わってから、次の処理を行うことを保証していないので順不同になる性質があるCPUを効率よく使用することができるノンブロッキングI/Oとは少し異なる点があるらしいが、今回は表面だけの理解にしておく","text":"同期I/OとはI/OとはIはInputでOはOutputの英語の頭文字を取ったもので、入出力処理のことで、情報をInput(入力)して、処理結果をOutput(出力)するという流れ多くのプログラミング言語ではI/O処理の間、プログラムを停止してI/O処理を待ち、このことを同期I/Oといい、この処理の間、プログラムが停止することをブロッキングという簡単に言うと今行っている処理が終わっていないなら、次の処理に手を付けないということ 非同期I/Oとは入出力の開始処理をしてもその終了を待たずに、待ち時間中に別の処理を実行することNode.jsは、マルチプロセスやマルチスレッドではなく、シングルスレッドでブロッキングしないで、効率化を図っている非同期I/Oは処理が１つ終わってから、次の処理を行うことを保証していないので順不同になる性質があるCPUを効率よく使用することができるノンブロッキングI/Oとは少し異なる点があるらしいが、今回は表面だけの理解にしておく マルチスレッド一つのコンピュータプログラムを実行する際に、複数の処理の流れを並行して進めること複数の処理の流れを生み出し、異なる処理を並行して進めることができる シングルスレッドJavaScriptもNode.jsもシングルスレッドであり、デッドロックなどを気にしなくていいが、一度に一つの処理しかできないプログラムの処理の流れが一本のみである状態、並列処理などは行わず、一つの命令を実行していくこと 参考リンクマルチスレッド","categories":[],"tags":[{"name":"node.js","slug":"node-js","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/node-js/"}]},{"title":"npmとyarn","slug":"node2","date":"2018-11-18T08:51:22.000Z","updated":"2018-11-20T20:15:09.618Z","comments":true,"path":"node2/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/node2/","excerpt":"npmとはnpm(Node Packaged Modules)とは、Node.jsのためのパッケージマネージャーどのようなライブラリのパッケージがインストールされているかを記録し、インストールや削除が容易に行えるnode.jsに標準で搭載されている パッケージとは様々な他のプログラムから利用できるように，汎用性の高いプログラムをまとめたものをライブラリといい、パッケージというのは，このライブラリをまとめて管理してくれるパッケージの依存関係を管理してくれるので、手間が減る","text":"npmとはnpm(Node Packaged Modules)とは、Node.jsのためのパッケージマネージャーどのようなライブラリのパッケージがインストールされているかを記録し、インストールや削除が容易に行えるnode.jsに標準で搭載されている パッケージとは様々な他のプログラムから利用できるように，汎用性の高いプログラムをまとめたものをライブラリといい、パッケージというのは，このライブラリをまとめて管理してくれるパッケージの依存関係を管理してくれるので、手間が減る 2種類のインストールnpmにはグローバルインストールとローカルインストールの２種類の方法があるグローバルインストールは、実行環境自体もインストールし、ローカルインストールは、現在のディレクトリでインストールする yarnとはyarn(ヤーン)もNode.jsのためのパッケージマネージャーnpmの代わりに使えて、package.jsonの互換性があるyarnはnpmと一緒に使えて、移行が楽で戻るのも簡単インストールはキャッシュを利用するので早い インストール方法npmを使いyarnをグローバルインストール1npm install -g yarn パッケージ開発の初期化1yarn init モジュールの追加1yarn add [パッケージ名] モジュールの削除1yarn remove [パッケージ名] yarn公式サイト","categories":[],"tags":[{"name":"node.js","slug":"node-js","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/node-js/"},{"name":"npm","slug":"npm","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/npm/"},{"name":"yarn","slug":"yarn","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/yarn/"}]},{"title":"Node.jsとは","slug":"node1","date":"2018-11-17T20:23:21.000Z","updated":"2018-11-17T22:16:51.878Z","comments":true,"path":"node1/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/node1/","excerpt":"Node.jsとは JavaScriptでプログラミングできる、フレームワークやライブラリではなくサーバサイドのプラットフォーム サーバーサイドとはサーバークライアント型のサービスのサーバ側のソフトウェアのこと","text":"Node.jsとは JavaScriptでプログラミングできる、フレームワークやライブラリではなくサーバサイドのプラットフォーム サーバーサイドとはサーバークライアント型のサービスのサーバ側のソフトウェアのこと JavaScriptはブラウザ上で動きをつけるために開発されたプログラミング言語だが、サーバサイドでもJavaScriptを 実行できるようにしてくれるのがNode.js PHPやJavaなどと同じような使い方ができるということだが、全く一緒ではない サーバも構築できるし、アプリケーションプログラムも動かせる イベントループを採用している シングルスレッドでループ処理を回し、キューに溜まったイベントを処理していく方式 リクエストを１つのスレッドで受け取ることができ,スレッドなどのリソース消費が少ない ブロッキングが発生すると、イベントループ全体がストップしてしまう問題を解決するのが、ノンブロッキングI/O ノンブロッキングI/O（入出力）を採用している 前の処理結果を待たずに他の処理を進めることができる 単一のスレッドでも並列して処理できるようになっている LINE、Twitter、instagramのようなリアルタイムな反応が必要なWebの分野で活躍する 色々調べたが、実際に利用しないと何が起こってるのか掴みにくいので、ここでは表面的な内容だけにしておく Node.jsのインストール(Windows版)Node.js公式サイトにて,ダウンロード Windows (x64)推奨版をクリック後は画面にしたがってインストールしていくカスタムインストール画面も追加したいものがなければ、そのままでいいインストールが完了したら、確認するために新しくインストールされたNode.js command prompt起動してバージョンを表示するコマンド1node -v 上記のコマンドを実行インストールしたバージョンが表示されればインストール成功 バージョン管理バージョン管理をするなら管理するツール(nodebrewやnodistなど)からnode.jsをインストールするnode.jsは日々さまざまな改善が行われ、今まで利用していた機能が、次のバージョンで使えなくなるということがあるそのようなことを防止するために現在のバージョンを明確にして、状況に応じてバージョンを変更することができる管理ツールを導入する","categories":[],"tags":[{"name":"node.js","slug":"node-js","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/node-js/"}]},{"title":"Git 用語集","slug":"git2","date":"2018-11-17T14:37:16.000Z","updated":"2018-11-17T14:39:55.356Z","comments":true,"path":"git2/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/git2/","excerpt":"GitHub用語集Gitでよく出てくる用語をメモしておく","text":"GitHub用語集Gitでよく出てくる用語をメモしておく リポジトリ(Repository)ソフトウェア開発において、ソースコードや開発に関わるデータをまとめて管理するためのデータの置き場のこと フォーク(Fork)他人のリポジトリ(リモートリポジトリ)をコピーして、自分のリポジトリを作成すること コミット(Commit)リポジトリになにかしらの変更を入れること イシュー(Issue)不具合や要求、その他の設計に関わることなどをイシューとしてまとめて、多くの人で議論するための機能 ギスト(Gist)メモやコードの断片を気軽に投稿して公開することができる機能 ブランチ(branch)ある時点のソースコードを分岐させて開発をしたもの複数のメンバーが、同時に機能追加などを行ったりするため並行して行われる複数の機能追加やバージョン管理を支援する機能masterブランチはデフォルトのブランチ ステージング(staging)とインデックス(index)いったん変更情報の登録すること変更を保持している領域をインデックスというワークツリーにあるファイルをローカルリポジトリにコミットするためには、インデックスという場所に、コミット予定のファイルを記録する必要がある ワークツリー(working tree)まだインデックスにステージングされていないファイル変更のことローカル環境内のディレクトリのこと マージ(merge)ブランチの間で変更情報を取り込むことリモートの更新情報をローカルに反映させる コンフリクト(Conflict)あるファイルの同じ行に対して、複数の人が別々の変更してしまいマージできないこと プルリクエスト(git pull)自分のフォークしたリポジトリから、変更差分をあなたのGitHubのリポジトリにpullしてください、という依頼のこと","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/Git/"},{"name":"GitHub","slug":"GitHub","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/GitHub/"}]},{"title":"GitとGitHub アカウント作成","slug":"git1","date":"2018-11-17T11:00:21.000Z","updated":"2018-11-17T14:45:31.315Z","comments":true,"path":"git1/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/git1/","excerpt":"Gitとはバージョン管理を行うソフトウェアのことで、バージョンとは、一度変更があるたびに更新される版名のこと分散バージョン管理システムと呼ばれ,ローカル環境にリポジトリ(データの置き場)の複製が作成され、ローカル環境にもコードの変更履歴を保存することができる GitHubとはGitの仕組みを利用して、ソースコードを共有することができるWebサービスで、基本的にすべて公開され,だれでも自由にソースコードのコピーを作って、それを修正することができる","text":"Gitとはバージョン管理を行うソフトウェアのことで、バージョンとは、一度変更があるたびに更新される版名のこと分散バージョン管理システムと呼ばれ,ローカル環境にリポジトリ(データの置き場)の複製が作成され、ローカル環境にもコードの変更履歴を保存することができる GitHubとはGitの仕組みを利用して、ソースコードを共有することができるWebサービスで、基本的にすべて公開され,だれでも自由にソースコードのコピーを作って、それを修正することができる GitHubのアカウント作成GitHubにアクセス以下の３つの項目に情報を入力してSign up for GitHubをクリック Username {ハンドルネーム} Email {メールアドレス} Password {パスワード} Welcome to GitHubと書かれたページが表示されたらデフォルトのままContinueをクリックする 最後にアンケート画面が出てくるので、答えない場合はskip this step をクリックして飛ばしても大丈夫 登録に成功すると、登録したメールアドレスにメールが届くので、メールのVerify email addressをクリックすると登録完了","categories":[],"tags":[{"name":"Git","slug":"Git","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/Git/"},{"name":"GitHub","slug":"GitHub","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/GitHub/"}]},{"title":"基本的なlinuxのコマンド","slug":"linux","date":"2018-11-04T22:56:20.000Z","updated":"2018-11-04T23:47:40.116Z","comments":true,"path":"linux/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/linux/","excerpt":"よく使うコマンドを書いておく馴染みの少ないコマンド操作なので、確認用にメモ","text":"よく使うコマンドを書いておく馴染みの少ないコマンド操作なので、確認用にメモ コマンド 結果 pwd 現在のディレクトリの表示 ls ファイル・ディレクトリの一覧の表示 cd 現在のディレクトリの変更 cd.. ひとつ前のディレクトリに戻る cd ~ ホームディレクトリに移動 ~(チルダ) mkdir ディレクトリの作成 rm ファイルやディレクトリの削除 cp ファイルやディレクトリのコピー mv ファイルやディレクトリの移動 find ファイルやディレクトリの検索 cat 複数のファイルの中身を結合して、標準出力に出力 less ファイルの中身をページ送りしながら表示 grep ファイルや標準入力の中から特定の単語を検索 オプション1$ ls -a のように付け加えることでよりコマンドの付随機能を呼び出せる種類はコマンドによって色々ある","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/linux/"}]},{"title":"Hexoでnewpostのテンプレートを変更する","slug":"hexo5","date":"2018-09-26T20:17:25.000Z","updated":"2018-09-26T21:26:15.939Z","comments":true,"path":"hexo5/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/hexo5/","excerpt":"Hexoでテンプレートを変更する場合はpost.mdを編集する .mdファイルとはマークダウンドキュメントファイルとして使用されるテキストフ​​ァイル scaffoldsフォルダにある ドラフトを使ってる場合はdraft.mdを編集する","text":"Hexoでテンプレートを変更する場合はpost.mdを編集する .mdファイルとはマークダウンドキュメントファイルとして使用されるテキストフ​​ァイル scaffoldsフォルダにある ドラフトを使ってる場合はdraft.mdを編集する 初期状態12345---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:--- ### カスタマイズ後12345678910111213---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags:---&#123;% asset_img img.jpg Image %&#125;## タイトル## 参考リンク[]() トップ画像を必ず使うのと参考リンクも多々乗せるので変更。 参考リンクHexo の 新規投稿テンプレート を カスタマイズ","categories":[],"tags":[{"name":"hexo blog","slug":"hexo-blog","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/hexo-blog/"}]},{"title":"cssでテキストを非表示にする","slug":"csstext","date":"2018-09-26T03:26:59.000Z","updated":"2018-09-26T03:41:39.047Z","comments":true,"path":"csstext/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/csstext/","excerpt":"要素を消さずに非表示にさせたいまとめて消してしまうのではなく他のの要素は残しつつ、文字を非表示させる方法を探していたところ、解決方法がありました。","text":"要素を消さずに非表示にさせたいまとめて消してしまうのではなく他のの要素は残しつつ、文字を非表示させる方法を探していたところ、解決方法がありました。 参考にさせていただいたサイトCSSで文字テキストを非表示にする（隠す）方法 html1&lt;div class=&quot;text&quot;&gt;あいうえお&lt;/div&gt; css12345text &#123;text-indent:100%;white-space:nowrap;overflow:hidden;&#125; これで文字を非表示にすることができる 最後に５年前の情報なので、今は違うやり方がたくさんある可能性がある。情報を見つけ次第、追記していきたい。","categories":[],"tags":[{"name":"css","slug":"css","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/css/"}]},{"title":"cssのflexで中央に寄せつつ、最後の行は左寄せにする","slug":"cssflex","date":"2018-09-25T21:22:03.000Z","updated":"2018-09-26T11:39:49.364Z","comments":true,"path":"cssflex/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/cssflex/","excerpt":"justify-contentについてjustify-content: centerを使って中央に寄せると最後の行に余った要素があると中央によってしまいます。かといって初期値のflex-startだと全体が左寄せになってしまう。他の方法でも良いが、flexはとても便利なのでflexboxだけで解決する方法を探していくと、解決法がネットにありました。","text":"justify-contentについてjustify-content: centerを使って中央に寄せると最後の行に余った要素があると中央によってしまいます。かといって初期値のflex-startだと全体が左寄せになってしまう。他の方法でも良いが、flexはとても便利なのでflexboxだけで解決する方法を探していくと、解決法がネットにありました。 参考にさせていただいたサイトFlexbox で全体を中央に配置しつつ最後の行を左揃えにする 解決方法としてはJavaScript (jQuery) を使い空の子要素で埋め、左まで詰めるという方法です。 html12345&lt;div class=&quot;wrap&quot;&gt; &lt;div class=&quot;list&quot;&gt; &lt;img src=&quot;&quot; alt=&quot;&quot; width=”300”height=&quot;400&quot;/&gt; &lt;/div&gt;&lt;/div&gt; css12345678910111213 .wrap&#123; display: flex; flex-flow: row wrap; justify-content: center;.list.is-empty &#123; width:300px; height: 0; padding-top: 0; padding-bottom: 0; margin-top: 0; margin-bottom: 0;&#125; js123456789var $grid = $(&apos;.wrap&apos;), emptyCells = [], i;for (i = 0; i &lt; $grid.find(&apos;.list&apos;).length; i++) &#123; emptyCells.push($(&apos;&lt;div&gt;&apos;, &#123; class: &apos;list is-empty&apos; &#125;));&#125;$grid.append(emptyCells); 最後に並べる数が変わっても、これで必要な空の部分を埋めてくれていて、余った長さの分は表示されていない。計算なしできれいに並べることができたが、cssだけでは不可能なのでjsを使わないのであれば,他の方法でやるほうが良い。","categories":[],"tags":[{"name":"css","slug":"css","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/css/"},{"name":"flex","slug":"flex","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/flex/"}]},{"title":"Hexoで記事を書く","slug":"hexo4","date":"2018-09-19T10:30:08.000Z","updated":"2018-09-19T11:08:46.376Z","comments":true,"path":"hexo4/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/hexo4/","excerpt":"MarkDownで記事を書く簡単に書けて、尚且つ軽量でHTMLに変換してくれるフォーマット基本的にMarkDown記法で書くがHexoが用意しているタグも使用できる","text":"MarkDownで記事を書く簡単に書けて、尚且つ軽量でHTMLに変換してくれるフォーマット基本的にMarkDown記法で書くがHexoが用意しているタグも使用できる MarkDownの書き方見出し1234# h1## h2### h3### h4 出力結果 h1h2h3h4リスト12- list 何か説明 出力結果 list何か説明 もしくは12* list+ list でも良い 番号付きリスト121. リスト１2. リスト２ 出力結果 リスト1 リスト2 リンク1[google](https://www.google.co.jp/) 出力結果 google 改行改行したい末尾に半角スペースを2スペース以上入れる12345あいうえおかきくけこさしすせそ たちつてと 出力結果 あいうえおかきくけこ さしすせそたちつてと 直接brタグを書いてもできる 強調1**あいうえお** 出力結果 あいうえお 画像1![alt](画像URL) 参考リンク文章作成やメモ書きにも便利、Markdown記法","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/blog/"}]},{"title":"Hexoでプラグインを追加する","slug":"hexo3","date":"2018-09-17T21:17:31.000Z","updated":"2018-09-17T23:40:01.249Z","comments":true,"path":"hexo3/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/hexo3/","excerpt":"必要なプラグインを追加する基本的にプラグインが色々と揃っているので必要に応じてインストールしていく","text":"必要なプラグインを追加する基本的にプラグインが色々と揃っているので必要に応じてインストールしていく サイトマップを作成1$ npm install hexo-generator-sitemap --save robots.txtを設置する1$ npm install hexo-generator-robotstxt --save RSSの設置する1$ npm install hexo-generator-feed --save 目次を設置する1npm install hexo-toc --save 上記をインストールした後に記事に下記を記述するとh1などを読みだしてくれる1&lt;!-- toc --&gt; 設定の変更は必要に応じてconfig.ymlを編集する その他の便利そうなプラグイン hexo-toc 目次を生成 hexo-generator-archive アーカイブを生成 hexo-generator-category カテゴリーを生成 hexo-generator-tag タグを生成 他にもかなりある様子","categories":[],"tags":[{"name":"GitHub","slug":"GitHub","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/GitHub/"},{"name":"hexo","slug":"hexo","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/blog/"}]},{"title":"Hexoで記事投稿","slug":"hexo2","date":"2018-09-16T20:40:08.000Z","updated":"2018-09-17T23:40:06.347Z","comments":true,"path":"hexo2/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/hexo2/","excerpt":"Hexoの設定,記事投稿テーマの変更や記事投稿はコマンド一つで簡単にできる","text":"Hexoの設定,記事投稿テーマの変更や記事投稿はコマンド一つで簡単にできる 記事を投稿する記事の追加は hexo new postもしくはhexo newでできる1$ hexo new 記事名 これで/source/_posts/に.mdのファイルができる.mdファイルを編集して記事をmarkdown方式で書く下書きする場合 hexo new draft1$ hexo new draft テーマを変更するHexoThemesここからテーマを選ぶ100種類以上はある1$ git clone 上記のコマンドで好きなテーマをクローンする直接ダウンロードしても大丈夫そしてconfig.ymlのtheme:の名前をダウンロードしたものに変更する下記は初期値1theme: landscape テーマを変更すると必要なプラグインが違ったり仕様がそれぞれ違うので今回はやらない(日本語情報少ない…) 画像を表示する1![alt](画像URL) 上記はMarkDownの書き方だが他のページで参照された時に表示されない場合config.ymlの# Writingの項目post_asset_folderをtrueにする(デフォルト値はfalse)1post_asset_folder: true Assetを有効にしたのでpostを作成したときに同じ名前のAssetフォルダができるそこに画像を格納する1&#123;% asset_img 画像URL Image %&#125; 上記のように打ち直しをすれば、画像が表示されるはずだめならプラグインを入れて対処する","categories":[],"tags":[{"name":"GitHub","slug":"GitHub","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/GitHub/"},{"name":"hexo","slug":"hexo","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/blog/"}]},{"title":"Hexoをインストールする","slug":"hexo1","date":"2018-09-09T20:59:47.000Z","updated":"2018-09-18T02:15:51.209Z","comments":true,"path":"hexo1/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/hexo1/","excerpt":"Hexoとは 静的サイトジェネレーターで簡単にシンプルなブログが作れる プラグインも豊富でGitHubPagesなどのサービスを使えば無料でサイトを作成できる Markdownの記事書いて、記事の作成もコマンドから行える node.js製なのでJavaScriptによる拡張が可能である データベース不要で、ページの表示が速い 脱CMSで、WordPrssのような環境依存がないこのように色々あるが、簡単に言うとMarkdownで書かれたファイルなどからHTML/CSS/JSを生成してくれるというもので、似たようなツールとしてJekyllやHugoなどがある。","text":"Hexoとは 静的サイトジェネレーターで簡単にシンプルなブログが作れる プラグインも豊富でGitHubPagesなどのサービスを使えば無料でサイトを作成できる Markdownの記事書いて、記事の作成もコマンドから行える node.js製なのでJavaScriptによる拡張が可能である データベース不要で、ページの表示が速い 脱CMSで、WordPrssのような環境依存がないこのように色々あるが、簡単に言うとMarkdownで書かれたファイルなどからHTML/CSS/JSを生成してくれるというもので、似たようなツールとしてJekyllやHugoなどがある。 Hexoをインストールとりあえずgitで公開するので、gitとNode.jsが必要gitでリポジトリ作成済なので1$ npm install hexo-cli -g 公式どおりにインストールする 作業ディレクトリ作成initでウェブサイト初期化、サイト用のフォルダを生成。1$ hexo init ディレクトリ名 cd ディレクトリ名で移動して1$ npm install これで、Hexoに必要なパッケージなどがインストールされる localで立ち上げて確認するhexo serverでコマンド起動(hexo sでもよい)1hexo s プラウザのアドレスバーにhttp://localhost:4000/と入力これでサイトが確認できる終了するときはCtrl+C gitにdeployする(公開できるように設定)_congig.ymlというファイルを編集する拡張子ymlはyamlで構造化データの表現方法各種設定ファイルなどで使う公式サイトにgitを使う場合はhexo-deployer-gitをインストールしてと書いてあるので1$ npm install hexo-deployer-git --save これでgitに公開する機能がインストールされる deployの項目の編集1234deploy: type: git repo: repo: (githubのURLをそのまま貼り付ける) branch: master リポジトリ名に.github.ioをつけたほうがいいかもしれない 次にURLの項目の編集123# URLurl: https://(ユーザーネーム).github.io/(リポジトリ名)/root: (リポジトリ名) サブドメインでやる場合はrootをしっかりと設定しないと正しく表示されない独自ドメインを使用する場合はGitHubHelpなどを見て設定する その他設定12345678# Sitetitle: (ブログ名)subtitle: (サブタイトル)description:keywords:author: (名前)language: jatimezone: Asia/Tokyo 静的ファイルを生成して展開する静的ファイル生成するコマンドはhexo generate生成して展開する場合は12$ hexo generate --deploy $ hexo deploy --generate 次のいずれかのコマンドを実行する両者に違いはない上記のコマンドのショートカット1$ hexo deploy -g これでさっき入力したアドレスにアクセスするとページが表示されるはず(反映に時間がかかる場合がある)deploy時にパスワードを聞かれるので、GitHubで設定したパスワードを入力する更新する時もdeployする","categories":[],"tags":[{"name":"GitHub","slug":"GitHub","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/GitHub/"},{"name":"hexo","slug":"hexo","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/hexo/"},{"name":"blog","slug":"blog","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/blog/"}]},{"title":"はじめに","slug":"about","date":"2018-09-07T18:03:20.771Z","updated":"2018-09-17T23:40:12.151Z","comments":true,"path":"about/","link":"","permalink":"https://satoshi2222.github.io/myblog.github.io.git/about/","excerpt":"ブログを作る色々と知識を増やしたかったので、とりあえずブログを作ってみることに。WordPressなどを使うことも考えたが、練習なので無料で済ましたいと思い調べたところGitHub Pagesを使えば無料でブログを公開できることが分かったので、静的サイトジェネレーターのHexoを使ってサイトを作成することにしてみました。","text":"ブログを作る色々と知識を増やしたかったので、とりあえずブログを作ってみることに。WordPressなどを使うことも考えたが、練習なので無料で済ましたいと思い調べたところGitHub Pagesを使えば無料でブログを公開できることが分かったので、静的サイトジェネレーターのHexoを使ってサイトを作成することにしてみました。 WebMemoについて分からないことを調べながらメモしていくサイトです。","categories":[],"tags":[{"name":"その他","slug":"その他","permalink":"https://satoshi2222.github.io/myblog.github.io.git/tags/その他/"}]}]}